version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=${FRONTEND_URL_API}
      - NEXT_PUBLIC_KEYCLOAK_URL=http://localhost:8080
      - NEXT_PUBLIC_KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - PORT=${FRONTEND_PORT}
    networks:
      - keycloak-network

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - keycloak
    environment:
      - PORT=${BACKEND_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
    networks:
      - keycloak-network

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_MULTIPLE_DATABASES=keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-db.sh:/docker-entrypoint-initdb.d/init-multiple-db.sh
    networks:
      - keycloak-network
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.4
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_HOSTNAME_STRICT_BACKCHANNEL=false
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HEALTH_ENABLED=true
      - KC_DB=${KC_DB}
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_USERNAME=${DB_USER}
      - KC_DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./gradeview-realm.json:/opt/keycloak/data/import/gradeview-realm.json
    command:
      - start-dev
      - --import-realm
    networks:
      - keycloak-network

volumes:
  postgres_data: 

networks:
  keycloak-network:
    driver: bridge 